/*
    - Video Game Notes:
        - Technologies:
            - MERN Stack
            - React Redux Typescript
            - Tiled, for creating tile set?
        - Libraries:
            - Material-ui
                - for styles:
                    - npm install @mui/styles
            - axios
            - Maybe something like Electron to package the application, once I have it in working state
                https://www.electronjs.org/
        - Database:
            - JSON: that will be loaded for user save
                - character:
                    - hat: yes / no
                    - hair: blonde / brown/ black/ red / blue / green/ puprle
                    - skin color: several shades
                    - sex: male / female
                    - shirt:
                    - pants:
                    - shoes:
                    - job/class: rogue / ghost hunter 
                    - items: [ list of items... ]
                    - location: last saved location
                - NPC:
                    - List of NPC in Game  
                        - Conversation: where left off, start at 0 and go up 
                            - converstaion will be saved in database, also multiple choices
                        - Location on map: there Location
                - 
    
        - Sprints:
            - Sprint 0: // completed
                - Setup a repository // completed
                - Setup material ui  // completed   
                - Clean up the code // completed
            - Sprint 1: // completed
                - Create a welcome page basic // completed
                - Aslo a login portion, but not functional yet // completed
            - Sprint 2: // completed
                - Spike SSO Authenication // completed
            - Sprint 3:
                - Create login using SSO Authenication Google
                    - Create FE Repo for login that can be reused:
                        - Repo
                        - Implement
                    - Backend:
                        - express.js
                        - Repo
                        - Implement
                    - Database:
                        - mongodb
                            - 1. download on:
                                - windows: // completed
                                - Linkux: // not yet
                            - Set Up database for it
                            - Create Repo
                            - Create Script or whatever for SSO login
                    - Libraries:
                        - passport.js
                - Connect to front end
            - Sprint __:
                - Implmenet libary created for sso into application
                - Along with routing to profile page
            - Sprint __:
                - Build out create character page
                - Save build to database
            - Sprint __: 
                - After character build, the character routed to game world
            - Sprint __:
                - Creat a save state for user,
            - Sprint 4:
                - Spike How to create tile set map
            - Sprint 5:
                - Create a small room for store
            - Sprint 6:
                - Implement it in the repository
            - Sprint 7:
                - Create a character
            - Sprint 8:
                - Implement character
            - Sprint 9:
                - Spike figure out how to add movement to character
            - Sprint 10: 
                - Implement movent to character
            - Sprint 11:
                - Create Several npcs for store
            - Sprint 12:
                - Spike figure out how to add text and somewhat ai to npcs
            - Sprint 13:
                - Spike Change the text npc has to somewhat of a digigal comic feel and alllow choices
                - May have to create db if not already one
            - sprint 14:
                - Implement the findings for the comic feel
            - Sprint 15:
                - implement google tag manager
            - Sprint 15:
                - ......
*/
